/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author iocoder
 */

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class MainWindow extends javax.swing.JFrame {
    
    public static JExtPanel drawingArea;
    private static JColorChooser colorSel;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        colors = new javax.swing.JColorChooser();
        jToolBar1 = new javax.swing.JToolBar();
        drawingParent = new javax.swing.JPanel();
        buttonPane = new javax.swing.JPanel();
        butSelect = new javax.swing.JButton();
        butFill = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Belletto 1.01");

        colors.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jToolBar1.setRollover(true);

        drawingParent.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout drawingParentLayout = new javax.swing.GroupLayout(drawingParent);
        drawingParent.setLayout(drawingParentLayout);
        drawingParentLayout.setHorizontalGroup(
            drawingParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        drawingParentLayout.setVerticalGroup(
            drawingParentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        butSelect.setText("Select");
        butSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSelectActionPerformed(evt);
            }
        });

        butFill.setText("Fill");
        butFill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butFillActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPaneLayout = new javax.swing.GroupLayout(buttonPane);
        buttonPane.setLayout(buttonPaneLayout);
        buttonPaneLayout.setHorizontalGroup(
            buttonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(buttonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(butSelect, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                    .addComponent(butFill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        buttonPaneLayout.setVerticalGroup(
            buttonPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(buttonPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(butSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(butFill)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(colors, javax.swing.GroupLayout.DEFAULT_SIZE, 746, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 146, Short.MAX_VALUE))
                    .addComponent(drawingParent, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(colors, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSelectActionPerformed
        
        for(MouseListener ml : drawingArea.getMouseListeners())
            drawingArea.removeMouseListener(ml);
        
        for(MouseMotionListener mml : drawingArea.getMouseMotionListeners())
            drawingArea.removeMouseMotionListener(mml);
        
        drawingArea.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent evt) {
                
            }
            @Override
            public void mouseReleased(MouseEvent evt) {
                Shapes.unselectAll();
                Pixel point = new Pixel(evt.getX(), evt.getY());
                for(int i = Shapes.arr.size()-1; i >= 0; i--) {
                    if (Shapes.arr.get(i).contains(point)) {
                        Shapes.arr.get(i).select();
                        Shapes.selectedShapes.add(Shapes.arr.get(i));
                        break;
                    }
                }
                drawingArea.repaint();
                
            }
        });
        drawingArea.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                
            }
        });
    }//GEN-LAST:event_butSelectActionPerformed

    private void butFillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butFillActionPerformed
        
        Shapes.unselectAll();
        
        for(MouseListener ml : drawingArea.getMouseListeners())
            drawingArea.removeMouseListener(ml);
        
        for(MouseMotionListener mml : drawingArea.getMouseMotionListeners())
            drawingArea.removeMouseMotionListener(mml);
        
        drawingArea.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent evt) {
                
            }
            @Override
            public void mouseReleased(MouseEvent evt) {
                Pixel point = new Pixel(evt.getX(), evt.getY());
                for(int i = Shapes.arr.size()-1; i >= 0; i--) {
                    if (Shapes.arr.get(i).contains(point)) {
                        Shapes.arr.get(i).setColor(colorSel.getColor());
                        break;
                    }
                }
                drawingArea.repaint();
                
            }
        });
        drawingArea.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseDragged(MouseEvent evt) {
                
            }
        });
    }//GEN-LAST:event_butFillActionPerformed

    public static void addLibrary(Class someClass)
        throws InstantiationException, IllegalAccessException {
        Shapes.addButton(someClass.getName());
        Shapes.samples.add((Shape) someClass.newInstance());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            @Override
            public void run() {
                
                // the window
                MainWindow win = new MainWindow();
                
                // button pane:
                win.buttonPane.setLayout(new GridLayout(0, 1));
                
                // drawing area:
                drawingArea = new JExtPanel();
                win.drawingParent.setLayout(new GridLayout(0, 1));
                win.drawingParent.add(drawingArea);
                
                // color selector:
                colorSel = win.colors;
                
                // initialize shapes class:
                Shapes.initStuff(win.buttonPane, drawingArea, colorSel);
               
                // load libraries:
                try {
                    addLibrary(Line.class);
                    addLibrary(Ellipse.class);
                    addLibrary(Circle.class);
                    addLibrary(Rectangle.class);
                    addLibrary(Triangle.class);
                    addLibrary(Square.class);
                } catch (InstantiationException | IllegalAccessException e) {
                    // TODO: some error.
                    System.out.println("Exception: " + e);
                }
                
                // show window:
                win.setVisible(true);
                
                // buffers:
                win.createBufferStrategy(2);
                drawingArea.setDoubleBuffered(true);

            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butFill;
    private javax.swing.JButton butSelect;
    private javax.swing.JPanel buttonPane;
    private javax.swing.JColorChooser colors;
    private javax.swing.JPanel drawingParent;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
